// ConsoleApplication1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
#include <windows.h>
using namespace std;
void func(char S1[], char S2[]);
int main()
{
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	cout << "Лабораторная работа №4\nвыполнил Кирсанов Артем гр. 7383\n";
	cout << "Задание: Преобразование введенных во входной строке шестнадцатеричных цифр в десятичную СС, остальные символы входной строки передаются в выходную строку непосредственно.\n";
	char S1[80];
	char S2[80];
	cin.getline(S1, 80);
	func(S1, S2);
	cout << S2 << endl;
}

void func(char S1[], char S2[]) {
	_asm {
		mov esi, S1
		mov edi, S2

		start:
		lodsb
			test al, al
				je exit1
			cmp al, ' '
				jne wrt
			stosb
			lodsb
				cmp al, 'A'
			jl wrt
			cmp al, 'F'
				jg wrt

			mov cx, ax
			mov al, 17
			add al, 20h
			stosb
			mov ax, cx
			sub ax, 17

		wrt:
			stosb
			jmp start
			exit1: stosb
	}
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
